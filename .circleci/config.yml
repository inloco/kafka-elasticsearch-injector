version: 2.1
defaults: &defaults
  environment:
    DOCKER_REPO: quay.io/inloco/kafka-elasticsearch-injector
jobs:
  test:
    <<: *defaults
    docker:
      - image: circleci/golang:1.14
      - image: confluentinc/cp-zookeeper:5.3.0
        environment:
          - ZOOKEEPER_CLIENT_PORT=2181
      - image: confluentinc/cp-kafka:5.3.0
        environment:
          - KAFKA_ZOOKEEPER_CONNECT=localhost:2181
          - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
          - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - image: confluentinc/cp-schema-registry:5.3.0
        environment:
          - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=localhost:2181
          - SCHEMA_REGISTRY_HOST_NAME=localhost
          - SCHEMA_REGISTRY_LISTENERS=http://localhost:8081
      - image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.0.0
        environment:
          ES_JAVA_OPTS: -Xms750m -Xmx750m
          discovery.type: single-node
          http.host: 0.0.0.0
          transport.host: 127.0.0.1
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
      - run:
          name: Login to Docker Hub
          command: |
            docker info
            docker login --username $DOCKER_USER --password $DOCKER_PASSWORD quay.io
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: "Make sure elasticsearch is up and running"
          command: |
            count=0; \
              until nc -z localhost 9200 || ((count ++ >= 10)); \
              do echo "Retrying: Verify if Elasticsearch is ready"; sleep 5; done
      - run:
          name: "Run tests"
          command: make test
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  build-image:
    <<: *defaults
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          docker_layer_caching: true
      - run:
          name: Make `golang get` play nice with bitbucket and github repositories
          command: |
            git config --global url."git@bitbucket.org:".insteadOf "https://bitbucket.org/"
            git config --global url."git@github.com:".insteadOf "https://github.com/"
            cat ~/.gitconfig
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Compile binary
          command: make compile-binary
      - run:
          name: Build docker images
          command: |
            docker build --rm=false -t "${DOCKER_REPO}:ci" -f cmd/Dockerfile .
      - run:
          name: Save docker images and version description files
          command: |
            mkdir -p /tmp/workspace
            docker save -o /tmp/workspace/image.tar $DOCKER_REPO:ci
            (git describe --abbrev=0 2>/dev/null | sed 's/[^0-9\\.]*//g' || echo -n "0.0.0") > /tmp/workspace/TAG
            (git rev-parse --short HEAD) > /tmp/workspace/HEAD
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - image.tar
            - TAG
            - HEAD

  deploy-image:
    <<: *defaults
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          reusable: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Restore docker images from build
          command: |
            docker load -i /tmp/workspace/image.tar
      - run:
          name: "docker login"
          command: docker login --username $DOCKER_USER --password $DOCKER_PASSWORD quay.io
      - run:
          name: Push images
          command: |
            export TAG=$(cat /tmp/workspace/TAG)
            export HEAD=$(cat /tmp/workspace/HEAD)
            export VERSION=$(echo -n "$TAG-$HEAD")

            if [ -z $CIRCLE_TAG ]; then
              docker tag $DOCKER_REPO:ci $DOCKER_REPO:$VERSION
              docker push $DOCKER_REPO:$VERSION
              echo "Pushed $DOCKER_REPO:$VERSION"
            else
              docker tag $DOCKER_REPO:ci $DOCKER_REPO:$TAG
              docker push $DOCKER_REPO:$TAG
              echo "Pushed $DOCKER_REPO:$TAG"
            fi
workflows:
  version: 2.1
  test-and-deploy-image-for-commit:
    jobs:
      - test:
          context: quay-push-credentials
          filters:
            branches:
              ignore: /master/
      - build-image:
          filters:
            branches:
              ignore: /master/
      - deploy-image:
          context: media
          requires:
            - build-image
          filters:
            branches:
              ignore: /master/
  test-and-deploy-image-for-tag:
    jobs:
      - test:
          context: quay-push-credentials
          filters:
            tags:
              only: /.+/
            branches:
              ignore: /.*/
      - build-image:
          filters:
            tags:
              only: /.+/
            branches:
              ignore: /.*/
      - deploy-image:
          context: media
          requires:
            - test
            - build-image
          filters:
            tags:
              only: /.+/
            branches:
              ignore: /.*/
